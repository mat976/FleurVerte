{% extends 'base.html.twig' %}

{% block title %}Ajouter une fleur
{% endblock %}

{% block javascripts %}
	{{ parent() }}
	<script>
		document.addEventListener('DOMContentLoaded', function () {
			// Tags interaction
			const tagCheckboxes = document.querySelectorAll('.tag-checkbox');

			// Fonction pour mettre à jour l'apparence d'un tag
			function updateTagAppearance(checkbox, label, checkIcon) {
				if (checkbox.checked) {
					label.style.backgroundColor = label.dataset.color || '#4B5563';
					label.style.color = '#ffffff';
					checkIcon.classList.remove('hidden');
				} else {
					label.style.backgroundColor = `${label.dataset.color}33` || '#e5e7eb';
					label.style.color = label.dataset.color || '#374151';
					checkIcon.classList.add('hidden');
				}
			}

			tagCheckboxes.forEach(checkbox => {
				const label = document.querySelector(`label[for="${checkbox.id}"]`);
				const checkIcon = label?.querySelector('.tag-check');

				if (label && checkIcon) {
					// Initialiser l'état immédiatement
					updateTagAppearance(checkbox, label, checkIcon);

					// Ajouter l'événement de clic
					label.addEventListener('click', function () {
						// Utiliser un délai pour s'assurer que l'état de la checkbox est mis à jour
						setTimeout(() => {
							updateTagAppearance(checkbox, label, checkIcon);
						}, 10);
					});

					// Ajouter un événement de changement pour la checkbox
					checkbox.addEventListener('change', function() {
						updateTagAppearance(checkbox, label, checkIcon);
					});
				}
			});

			// Log pour déboguer
			console.log('Tags initialisés:', tagCheckboxes.length);
			tagCheckboxes.forEach(checkbox => {
				console.log(`Tag ${checkbox.id}: ${checkbox.checked ? 'checked' : 'unchecked'}`);
			});
		});
	</script>
{% endblock %}

{% block body %}
	<div class="min-h-screen bg-gray-100 py-12">
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
			<div class="sm:mx-auto sm:w-full mb-8">
				<h1 class="text-center text-3xl font-extrabold text-gray-900">
					Ajouter une nouvelle fleur
				</h1>
				<p class="mt-2 text-center text-sm text-gray-600">
					Remplissez les informations pour ajouter un nouveau produit à votre catalogue
				</p>
			</div>

			<div class="flex justify-end mb-6">
				<a href="{{ path('app_fleuriste_dashboard') }}" class="bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded transition duration-200 ease-in-out">
					<i class="fas fa-arrow-left mr-2"></i>Retour au tableau de bord
				</a>
			</div>

			<div class="bg-white shadow rounded-lg p-8">
				{{ form_start(form, {'attr': {'class': 'space-y-6'}}) }}
				<div class="mb-6">
					{{ form_label(form.nom, 'Nom du produit', {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
					<div class="mt-1">
						{{ form_widget(form.nom, {'attr': {'class': 'shadow-sm focus:ring-green-500 focus:border-green-500 block w-full sm:text-sm border-gray-300 rounded-md', 'placeholder': 'Nom de votre produit'}}) }}
					</div>
					{{ form_errors(form.nom) }}
				</div>

				<div class="mb-6">
					{{ form_label(form.description, 'Description', {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
					<div class="mt-1">
						{{ form_widget(form.description, {'attr': {'class': 'shadow-sm focus:ring-green-500 focus:border-green-500 block w-full sm:text-sm border-gray-300 rounded-md', 'rows': '4', 'placeholder': 'Décrivez votre produit en détail...'}}) }}
					</div>
					{{ form_errors(form.description) }}
				</div>

				<div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
					<div>
						{{ form_label(form.Thc, 'THC (%)', {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
						<div class="mt-1 relative rounded-md shadow-sm">
							{{ form_widget(form.Thc, {'attr': {'class': 'focus:ring-green-500 focus:border-green-500 block w-full pr-12 sm:text-sm border-gray-300 rounded-md', 'placeholder': '0.0'}}) }}
							<div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
								<span class="text-gray-500 sm:text-sm">%</span>
							</div>
						</div>
						{{ form_errors(form.Thc) }}
					</div>

					<div>
						{{ form_label(form.prix, 'Prix (€)', {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
						<div class="mt-1 relative rounded-md shadow-sm">
							<div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
								<span class="text-gray-500 sm:text-sm">€</span>
							</div>
							{{ form_widget(form.prix, {'attr': {'class': 'focus:ring-green-500 focus:border-green-500 block w-full pl-7 pr-12 sm:text-sm border-gray-300 rounded-md', 'placeholder': '0.00'}}) }}
						</div>
						{{ form_errors(form.prix) }}
					</div>
				</div>

				<div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
					<div>
						{{ form_label(form.stock, 'Stock disponible', {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
						<div class="mt-1">
							{{ form_widget(form.stock, {'attr': {'class': 'shadow-sm focus:ring-green-500 focus:border-green-500 block w-full sm:text-sm border-gray-300 rounded-md', 'placeholder': 'Entrez la quantité en stock'}}) }}
						</div>
						{{ form_errors(form.stock) }}
					</div>

					<div class="flex items-center space-x-3 mt-6">
						<div class="flex items-center h-5">
							{{ form_widget(form.isPinned) }}
						</div>
						<div class="ml-3 text-sm">
							{{ form_label(form.isPinned, 'Épingler ce produit', {'label_attr': {'class': 'font-medium text-gray-700'}}) }}
							<p class="text-gray-500">Les produits épinglés apparaîtront en premier dans le catalogue</p>
						</div>
					</div>
				</div>

				<div class="mb-6">
					{{ form_label(form.tags, 'Tags', {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
					<div class="mt-2 bg-gray-50 p-4 rounded-md border border-gray-200">
						<div class="flex flex-wrap gap-2">
							{% for tag in form.tags %}
								<div class="flex items-center">
									{{ form_widget(tag, {'attr': {'class': 'sr-only tag-checkbox'}}) }}
									<label for="{{ tag.vars.id }}" class="tag-label cursor-pointer inline-flex items-center px-3 py-1.5 rounded-full text-sm font-medium transition-colors" data-color="{% if tag.vars.value.couleur is defined %}{{ tag.vars.value.couleur }}{% else %}#4B5563{% endif %}" style="background-color: {% if tag.vars.value.couleur is defined %}{{ tag.vars.value.couleur ? tag.vars.value.couleur ~ '33' : '#e5e7eb' }}{% else %}#e5e7eb{% endif %}; color: {% if tag.vars.value.couleur is defined %}{{ tag.vars.value.couleur ?: '#374151' }}{% else %}#374151{% endif %}">
										{% if tag.vars.value.nom is defined %}{{ tag.vars.value.nom }}{% else %}{{ tag.vars.label }}{% endif %}
										<span class="tag-check ml-1 hidden">
											<i class="fas fa-check"></i>
										</span>
									</label>
								</div>
							{% endfor %}
						</div>
						<div class="mt-2 text-sm text-gray-500">
							<a href="{{ path('app_tag_index') }}" class="text-green-600 hover:text-green-800">
								<i class="fas fa-plus-circle mr-1"></i>Gérer les tags
							</a>
						</div>
					</div>
					{{ form_errors(form.tags) }}
				</div>

				<div class="mb-6">
					{{ form_label(form.imageFile, 'Image du produit', {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
					<div class="mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md hover:border-green-500 transition duration-200 ease-in-out">
						<div class="space-y-1 text-center">
							<svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewbox="0 0 48 48" aria-hidden="true">
								<path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
							</svg>
							<div class="flex text-sm text-gray-600">
								<label for="{{ form.imageFile.vars.id }}" class="relative cursor-pointer bg-white rounded-md font-medium text-green-600 hover:text-green-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-green-500">
									<span>Télécharger une image</span>
									{{ form_widget(form.imageFile, {'attr': {'class': 'sr-only'}}) }}
								</label>
								<p class="pl-1">ou glisser-déposer</p>
							</div>
							<p class="text-xs text-gray-500">
								PNG, JPG, GIF jusqu'à 10MB
							</p>
						</div>
					</div>
					{{ form_errors(form.imageFile) }}
				</div>

				<div class="flex justify-end space-x-4 pt-6 border-t border-gray-200 mt-8">
					<a href="{{ path('app_fleuriste_dashboard') }}" class="bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-6 rounded transition duration-200 ease-in-out">
						<i class="fas fa-times mr-2"></i>Annuler
					</a>
					<button type="submit" class="bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-6 rounded transition duration-200 ease-in-out">
						<i class="fas fa-plus mr-2"></i>Ajouter le produit
					</button>
				</div>
				{{ form_end(form) }}
			</div>
		</div>
	</div>
{% endblock %}
